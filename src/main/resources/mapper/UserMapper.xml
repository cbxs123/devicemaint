<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.maint.system.mapper.UserMapper">

    <resultMap id="BaseResultMap" type="com.maint.system.model.User">
        <id column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="nickname" jdbcType="VARCHAR" property="nickname"/>
        <result column="salt" jdbcType="VARCHAR" property="salt"/>
        <result column="tel" jdbcType="VARCHAR" property="tel"/>
        <result column="status" jdbcType="CHAR" property="status"/>
        <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime"/>
        <result column="dept_id" jdbcType="INTEGER" property="deptId"/>
    </resultMap>

    <sql id="Base_Column_List">
            user_id,
            username,
            password,
            nickname,
            salt,
            tel,
            status,
            last_login_time,
            create_time,
            modify_time,
            active_code,
            dept_id
    </sql>
    
    <sql id="Unassign_Column_List">
            u.user_id,
            u.username,
            u.nickname
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where user_id = #{userId,jdbcType=INTEGER}
    </select>
    
    <select id="selectUnassignCharger" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Unassign_Column_List"/>
        from user u, role r, user_role ur
        <where>
        	<choose>
        		<when test="deptId == -1024">
                    and r.role_id = 2 and r.role_id = ur.role_id and ur.user_id = u.user_id and u.status = 1 and u.dept_id is null
                </when>
        		<otherwise>
        			and r.role_id = 2 and r.role_id = ur.role_id and ur.user_id = u.user_id and u.status = 1 and (u.dept_id is null or u.dept_id = #{deptId})
        		</otherwise>
        	</choose>
        </where>
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from user
        where user_id = #{userId,jdbcType=INTEGER}
    </delete>

    <insert id="insert" keyColumn="user_id" keyProperty="userId" parameterType="com.maint.system.model.User"
            useGeneratedKeys="true">
        insert into user (username, password, nickname, salt,
                          tel, status, last_login_time, active_code, dept_id)
        values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR},
                #{tel,jdbcType=VARCHAR}, #{status,jdbcType=CHAR}, #{lastLoginTime,jdbcType=TIMESTAMP},
                #{activeCode,jdbcType=VARCHAR}, #{deptId,jdbcType=INTEGER})
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.maint.system.model.User">
        update user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                nickname = #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="salt != null">
                salt = #{salt,jdbcType=VARCHAR},
            </if>
            <if test="tel != null">
                tel = #{tel,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=CHAR},
            </if>
            <if test="lastLoginTime != null">
                last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deptId != null">
                dept_id = #{deptId,jdbcType=INTEGER}
            </if>
        </set>
        where user_id = #{userId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.maint.system.model.User">
        update user
        set username        = #{username,jdbcType=VARCHAR},
            password        = #{password,jdbcType=VARCHAR},
            salt            = #{salt,jdbcType=VARCHAR},
            tel           = #{tel,jdbcType=VARCHAR},
            status          = #{status,jdbcType=CHAR},
            last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
            dept_id         = #{deptId,jdbcType=INTEGER}
        where user_id = #{userId,jdbcType=INTEGER}
    </update>
    
    <update id="bunding" parameterType="com.maint.system.model.User">
        update user
        set dept_id         = #{deptId,jdbcType=INTEGER}
        where user_id = #{userId,jdbcType=INTEGER}
    </update>
    
    <update id="unbunding" parameterType="com.maint.system.model.User">
        update user
        set dept_id = null
        where user_id = #{userId,jdbcType=INTEGER}
    </update>

    <select id="selectPermsByUserName" resultType="String" parameterType="String">
        select menu.perms
        from user,
             role,
             user_role,
             menu,
             role_menu
        where user.user_id = user_role.user_id
          and role.role_id = user_role.role_id
          and role.role_id = role_menu.role_id
          and menu.menu_id = role_menu.menu_id
          and user.username = #{username, jdbcType=VARCHAR}
    </select>

    <select id="selectRoleNameByUserName" resultType="String" parameterType="String">
        select role.role_name
        from user,
             role,
             user_role
        where user.user_id = user_role.user_id
          and role.role_id = user_role.role_id
          and user.username = #{username,jdbcType=VARCHAR}
    </select>

    <select id="selectOneByUserName" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where username=#{username,jdbcType=VARCHAR} limit 1
    </select>


    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
    </select>

    <update id="updateStatusByPrimaryKey">
        update user
        set status = #{status}
        where user_id = #{id}
    </update>

    <update id="updateLastLoginTimeByUsername">
        update user
        set last_login_time = current_timestamp
        where username = #{username}
    </update>

    <select id="countByUserName" resultType="java.lang.Integer">
        select count(*)
        from user
        where username = #{username}
    </select>

    <select id="countByUserNameNotIncludeUserId" resultType="java.lang.Integer">
        select count(*)
        from user
        where username = #{username}
          and user_id != #{userId}
    </select>

    <select id="selectRoleIdsByUserId" resultType="java.lang.Integer">
        select role_id
        from user_role
        where user_id = #{userId}
    </select>

    <select id="selectByActiveCode" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user where active_code = #{activeCode}
    </select>

    <select id="count" resultType="java.lang.Integer">
        select count(*)
        from user
    </select>

    <select id="selectOperatorPermsByUserName" resultType="String" parameterType="String">
        select operator.perms
        from user,
             role,
             user_role,
             operator,
             role_operator
        where user.user_id = user_role.user_id
          and role.role_id = user_role.role_id
          and role.role_id = role_operator.role_id
          and operator.operator_id = role_operator.operator_id
          and user.username = #{username, jdbcType=VARCHAR}
    </select>

    <update id="updatePasswordByUserId">
        update user
        set password = #{password},
            salt     = #{salt}
        where user_id = #{userId}
    </update>

    <select id="selectAllWithDept" resultMap="BaseResultMap">
        select u.user_id,
               u.username,
               u.password,
               u.nickname,
               u.salt,
               u.tel,
               u.status,
               u.last_login_time,
               u.create_time,
               u.modify_time,
               u.active_code,
               u.dept_id,
               d.dept_name
        from user u
                 left join dept d on u.dept_id = d.dept_id
        <where>
            <if test="nickname != null and nickname != ''">
                AND u.nickname like CONCAT('%', #{nickname, jdbcType=VARCHAR}, '%')
            </if>
            <if test="tel != null and tel != ''">
                AND u.tel = #{tel}
            </if>
        </where>
    </select>
    
    <select id="selectAllWithDeptExceptAdmin" resultMap="BaseResultMap">
        select u.user_id,
               u.username,
               u.password,
               u.nickname,
               u.salt,
               u.tel,
               u.status,
               u.last_login_time,
               u.create_time,
               u.modify_time,
               u.active_code,
               u.dept_id,
               d.dept_name
        from user u
                 left join dept d on u.dept_id = d.dept_id
        <where>
            <if test="nickname != null and nickname != ''">
                AND u.nickname like CONCAT('%', #{nickname, jdbcType=VARCHAR}, '%')
            </if>
            <if test="tel != null and tel != ''">
                AND u.tel = #{tel}
            </if>
            AND u.username not in ('root', 'admin')
        </where>
    </select>

    <update id="activeUserByUserId">
        update user
        set status = 1
        where user_id = #{userId}
    </update>
    
    <select id="selectByRole" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        u.user_id, u.username, u.nickname, u.tel
        from user u, user_role ur
        where u.user_id = ur.user_id and u.status = 1 and ur.role_id = #{roleId}
    </select>

</mapper>